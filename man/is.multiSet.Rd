% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiData.R
\name{is.multiSet}
\alias{is.multiSet}
\title{Determine whether the supplied object is a valid multiSet structure}
\usage{
is.multiSet(x, strict = TRUE)
}
\arguments{
\item{x}{An object.}

\item{strict}{Logical: should the structure of multiSet be checked for
"strict" compliance?}
}
\value{
Logical: \code{TRUE} if the input \code{x} is a multiSet structure,
\code{FALSE} otherwise.
}
\description{
Attempts to determine whether the supplied object is a valid multiSet
structure (see Details).
}
\details{
A multiSet structure is intended to store (the same type of) data for
multiple, possibly independent, realizations (for example, expression data
for several independent experiments). It is a list where each component
corresponds to an (independent) data set. Each component is in turn a list
that can hold various types of information but must have a \code{data}
component. In a "strict" multiSet structure, the \code{data} components are
required to each be a matrix or a data frame and have the same number of
columns. In a "loose" multiSet structure, the \code{data} components can be
anything (but for most purposes should be of comparable type and content).

This function checks whether the supplied \code{x} is a multiSet structure
in the "strict" (when \code{strict = TRUE} or "loose" \code{strict = FALSE}
sense.
}
\seealso{
Other multiSet handling functions whose names start with
\code{multiSet.}
}
\author{
Peter Langfelder
}
\keyword{misc}
