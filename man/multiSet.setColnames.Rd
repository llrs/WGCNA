% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiData.R
\name{multiSet.setColnames}
\alias{colnames}
\alias{colnames.multiSet}
\alias{multiSet.setColnames}
\title{Get and set column names in a multiSet structure.}
\usage{
multiSet.setColnames(multiSet, colnames)

colnames(x, ...)
}
\arguments{
\item{multiSet}{A multiSet structure}

\item{colnames}{A vector (coercible to character) of column names.
\code{multiSet.setColnames} returns the multiSet structure with the column names
set in all \code{data} components.}
}
\value{
\code{colnames.multiSet} returns the vector of column names of the
\code{data} component. The function assumes the column names in all sets are
the same.
}
\description{
Get and set column names on each \code{data} component in a multiSet
structure.
}
\details{
A multiSet structure is intended to store (the same type of) data for
multiple, possibly independent, realizations (for example, expression data
for several independent experiments). It is a list where each component
corresponds to an (independent) data set. Each component is in turn a list
that can hold various types of information but must have a \code{data}
component. In a "strict" multiSet structure, the \code{data} components are
required to each be a matrix or a data frame and have the same number of
columns. In a "loose" multiSet structure, the \code{data} components can be
anything (but for most purposes should be of comparable type and content).

The \code{colnames.multiSet} and \code{multiSet.setColnames} assume (and checks for) a
"strict" multiSet structure.
}
\author{
Peter Langfelder
}
\seealso{
\code{\link{multiSet}} to create a multiSet structure.
}
\keyword{misc}

